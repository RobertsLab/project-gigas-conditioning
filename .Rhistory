select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
goose$DateTime
?as.POSIXct
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S", tz="PDT")
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S", tz="PST")
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S", tz="UTC")
goose.files <- list.files(path="data/environmental/loggers/goose_point", pattern="*.csv", full.names=TRUE)
goose <- setNames(goose.files, goose.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temp (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S", tz="UTC")
levels(as.factor(goose$logger))
goose <- goose %>%
mutate(group = c("Goose Point"))
levels(as.factor(goose$group))
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
goose$DateTime
goose.files <- list.files(path="data/environmental/loggers/goose_point", pattern="*.csv", full.names=TRUE)
goose <- setNames(goose.files, goose.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temp (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S")
goose$DateTime
goose.files <- list.files(path="data/environmental/loggers/goose_point", pattern="*.csv", full.names=TRUE)
goose <- setNames(goose.files, goose.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temp (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
goose$DateTime
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%Y %H:%M:%S")
goose$DateTime
goose <- setNames(goose.files, goose.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temp (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
goose$DateTime
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%y %H:%M")
goose$DateTime
levels(as.factor(goose$logger))
goose <- goose %>%
mutate(group = c("Goose Point"))
levels(as.factor(goose$group))
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-09-09", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
filter(!as.Date(DateTime) %in% dates_to_filter)
goose_plot<-test%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
View(test)
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-09-09", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
filter(!(as.Date(DateTime, tz = "PDT") %in% dates_to_filter))
# Filter out rows with specified dates
test <- goose %>%
filter(!(as.Date(date_column) %in% dates_to_filter))
# Filter out rows with specified dates
test <- goose %>%
filter(!(as.Date(DateTime) %in% dates_to_filter))
test <- goose %>%
mutate(day=as.Date(DateTime))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-06-25", "2024-09-09", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-06-25", "2024-09-09", "2024-09-10", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
goose_plot<-test%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-06-25", "2024-06-26", "2024-06-27", "2024-09-09", "2024-09-10", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
goose_plot<-test%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
ggsave(goose_plot, filename="figures/environmental/goose-loggers.png", width=10, height=6)
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-24", "2024-06-25", "2024-09-09", "2024-09-10", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
goose_plot<-test%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
# Dates to filter out
dates_to_filter <- as.Date(c("2024-06-19", "2024-06-20", "2024-06-21", "2024-06-22", "2024-06-23", "2024-06-24", "2024-06-25", "2024-09-09", "2024-09-10", "2024-12-11"))
# Filter out rows with specified dates
test <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
goose_plot<-test%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
# Filter out rows with specified dates
goose <- goose %>%
mutate(day=as.Date(DateTime))%>%
filter(!day %in% dates_to_filter)
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); goose_plot
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,40)+
theme_classic(); goose_plot
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,40)+
theme_classic(); goose_plot
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C, fill=logger))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,40)+
theme_classic(); goose_plot
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,40)+
theme_classic(); goose_plot
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date")+
ylim(0,40)+
theme_classic(); goose_plot
#calculate min and max of each day and plot this difference over time
daily_goose<-goose%>%
group_by(logger, day)
daily_goose
#calculate min and max of each day and plot this difference over time
daily_goose<-goose%>%
group_by(logger, day, group)%>%
summarise(min=min(temp.C), max=max(temp.C))
daily_goose
#calculate min and max of each day and plot this difference over time
daily_goose<-goose%>%
group_by(logger, day, group)%>%
summarise(min=min(temp.C), max=max(temp.C))%>%
mutate(diff=max-min)
daily_goose
goose_plot2<-goose_daily%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,40)+
theme_classic(); goose_plot2
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,40)+
theme_classic(); goose_plot2
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot2
ggsave(goose_plot, filename="figures/environmental/goose-loggers_daily-range.png", width=10, height=6)
ggsave(goose_plot, filename="figures/environmental/goose-loggers.png", width=10, height=6)
#calculate min and max of each day and plot this difference over time
variability_goose<-goose%>%
group_by(logger, day, group)%>%
summarise(sd=sd(temp.C))
variability_goose
goose_plot3<-variability_goose%>%
ggplot(aes(x=day, y=sd))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Variability (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot3
goose_plot3<-variability_goose%>%
ggplot(aes(x=day, y=sd))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Variability (°C)")+
xlab("Date")+
ylim(0,5)+
theme_classic(); goose_plot3
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot2
goose_plot3<-variability_goose%>%
ggplot(aes(x=day, y=sd))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Variability (°C)")+
xlab("Date")+
ylim(0,5)+
theme_classic(); goose_plot3
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black")+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot2
ggsave(goose_plot, filename="figures/environmental/goose-loggers_daily-range.png", width=10, height=6)
ggsave(goose_plot2, filename="figures/environmental/goose-loggers_daily-range.png", width=10, height=6)
ggsave(goose_plot2, filename="figures/environmental/goose-loggers_daily-range.png", width=8, height=6)
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black", se=FALSE)+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot2
goose_plot<-goose%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black", se=FALSE)+
ylab("Temperature (°C)")+
xlab("Date")+
ylim(0,40)+
theme_classic(); goose_plot
ggsave(goose_plot, filename="figures/environmental/goose-loggers.png", width=10, height=6)
#calculate min and max of each day and plot this difference over time
daily_goose<-goose%>%
group_by(logger, day, group)%>%
summarise(min=min(temp.C), max=max(temp.C))%>%
mutate(diff=max-min)
goose_plot2<-daily_goose%>%
ggplot(aes(x=day, y=diff))+
geom_point(alpha=0.7, colour="darkgray")+
geom_smooth(colour="black", se=FALSE)+
ylab("Daily Temperature Range (°C)")+
xlab("Date")+
ylim(0,20)+
theme_classic(); goose_plot2
ggsave(goose_plot2, filename="figures/environmental/goose-loggers_daily-range.png", width=8, height=6)
#export data
goose%>%
select(!day)
#export data
goose%>%
select(!day)%>%
select(!group)
#export data
goose%>%
select(!day)%>%
select(!group)%>%
write_csv("output/environmental/goose-point-temperature-data.csv")
goose.files <- list.files(path="data/environmental/loggers/goose_point", pattern="*.csv", full.names=TRUE)
goose <- setNames(goose.files, goose.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temp (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
#export data
goose%>%
write_csv("output/environmental/goose-point-temperature-data.csv")
goose$DateTime<-as.POSIXct(goose$DateTime, format="%m/%d/%y %H:%M")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
# Chunk 2
library(tidyverse)
library(stringr)
library(readxl)
library(purrr)
library(lubridate)
library(ggplot2)
library(seacarb)
library(broom)
library(cowplot)
# Chunk 3
tidbit.files <- list.files(path="data/environmental/loggers/point_whitney/for-analysis", pattern="*.csv", full.names=TRUE)
#will need to change to HST time
tidbits <- setNames(tidbit.files, tidbit.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temp   (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
#format date for trays logger, formatted differently
trays<-tidbits%>%
filter(logger=="22023395")
other<-tidbits%>%
filter(!logger=="22023395")
trays$DateTime<-as.POSIXct(trays$DateTime, format="%m/%d/%y %H:%M")
other$DateTime<-as.POSIXct(other$DateTime, format="%m/%d/%Y %H:%M:%S")
tidbits<-rbind(trays,other)
# Chunk 4
levels(as.factor(tidbits$logger))
# Chunk 5
tidbits <- tidbits %>%
mutate(group = case_when(
logger == "22023395" ~ "trays",
logger == "22023398" ~ "outdoor",
logger == "22023406" ~ "broodstock",
logger == "22023410" ~ "LCO",
TRUE ~ "other"  # Default for other values
))
levels(as.factor(tidbits$group))
# Chunk 6
temp_plot<-tidbits%>%
ggplot(aes(x=DateTime, y=temp.C, colour=group, fill=group))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(8,32)+
theme_classic(); temp_plot
ggsave(temp_plot, filename="figures/environmental/point-whitney-loggers.png", width=6, height=4)
# Chunk 7
temp_plot<-tidbits%>%
filter(group %in% c("broodstock", "LCO", "outdoor"))%>%
filter(temp.C>15)%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="gray")+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date")+
ggtitle("3-holer tanks")+
ylim(8,32)+
theme_classic(); temp_plot
ggsave(temp_plot, filename="figures/environmental/3-holer-tanks-PW.png", width=6, height=4)
# Chunk 8
temp_plot<-tidbits%>%
filter(group %in% c("trays"))%>%
#filter(temp.C>15)%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="gray")+
geom_smooth(colour="black")+
ylab("Temperature (°C)")+
xlab("Date")+
ggtitle("Seed trays")+
geom_vline(xintercept=as.POSIXct("2024-08-05 15:45:00"), linetype="dashed", colour="black")+
geom_text(x=as.POSIXct("2024-07-01 15:45:00"), y=22, label="left stack")+
geom_text(x=as.POSIXct("2024-09-01 15:45:00"), y=22, label="right stack")+
ylim(8,25)+
theme_classic(); temp_plot
ggsave(temp_plot, filename="figures/environmental/seed-trays-PW.png", width=6, height=4)
westcott.files <- list.files(path="data/environmental/loggers/westcott/westcottloggers_20241217/", pattern="*.xlsx", full.names=TRUE)
#will need to change to HST time
westcott <- setNames(westcott.files, westcott.files) %>%
map_dfr(read_xlsx, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temperature (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
westcott.files <- list.files(path="data/environmental/loggers/westcott/westcottloggers_20241217/", pattern="*.xlsx", full.names=TRUE)
#will need to change to HST time
westcott <- setNames(westcott.files, westcott.files) %>%
map_dfr(read_xlsx, .id = "logger") %>%
rename(DateTime=`Date-Time (PST)`, temp.C=`Temperature (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
westcott.files <- list.files(path="data/environmental/loggers/westcott/westcottloggers_20241217/", pattern="*.xlsx", full.names=TRUE)
#will need to change to HST time
westcott <- setNames(westcott.files, westcott.files) %>%
map_dfr(read_xlsx, .id = "logger") %>%
rename(DateTime=`Date-Time (PST/PDT)`, temp.C=`Temperature (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
westcott$DateTime<-as.POSIXct(westcott$DateTime, format="%m/%d/%Y %H:%M:%S")
levels(as.factor(westcott$logger))
westcott <- westcott %>%
mutate(group = c("Westcott"))
levels(as.factor(westcott$group))
westcott_plot<-westcott%>%
ggplot(aes(x=DateTime, y=temp.C, colour=logger, fill=logger))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); westcott_plot
westcott_plot<-westcott%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="black", fill="black")+
geom_smooth()+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); westcott_plot
westcott_plot<-westcott%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="darkgray", fill="darkgray")+
geom_smooth()+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); westcott_plot
westcott_plot<-westcott%>%
ggplot(aes(x=DateTime, y=temp.C))+
geom_point(alpha=0.7, colour="darkgray", fill="darkgray")+
geom_smooth(colour="black", se=FALSE)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(0,50)+
theme_classic(); westcott_plot
ggsave(westcott_plot, filename="figures/environmental/westcott-loggers.png", width=10, height=6)
