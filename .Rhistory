B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
View(B_growth)
View(D_growth)
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric, data = D_growth)
D_growth$date <- as.numeric(as.Date(D_growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric, data = D_growth)
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
D_growth$date_numeric <- as.numeric(as.Date(D_growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric, data = D_growth)
summary(model)
D_growth$date_factor <- as.factor(D_growth$date))
D_growth$date_factor <- as.factor(D_growth$date)
model2 <- lm(length.mm ~ width.mm + height.mm + date_factor, data = D_growth)
summary(model2)
model2$residuals
plot(model2$fitted.values, model2$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
plot(model2$fitted.values, model2$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(df$width, model$residuals,
xlab = "Width",
ylab = "Residuals",
main = "Residuals vs Width")
qqnorm(model2$residuals)
qqline(model2$residuals, col = "red")
qqnorm(model2$residuals)
qqline(model2$residuals, col = "red")
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(D_growth$width, model2$residuals,
xlab = "Width",
ylab = "Residuals",
main = "Residuals vs Width")
plot(D_growth$width, model2$residuals,
xlab = "Width",
ylab = "Residuals",
main = "Residuals vs Width")
plot(D_growth$height, model2$residuals,
xlab = "Height",
ylab = "Residuals",
main = "Residuals vs Height")
plot(model, which = 3)
cooksd <- cooks.distance(model)
# Identify points with high Cook's distance (e.g., greater than 4/n where n is the number of observations)
outliers_cooks <- which(cooksd > 4 / nrow(D_growth))
D_growth[outliers_cooks, ]
print(D_growth[outliers_cooks, ])
D_growth_PCA <- subset(D_growth, select = c(length.mm, width.mm, height.mm))
View(D_growth_PCA)
pca_result <- prcomp(D_growth_PCA, scale. = TRUE)
biplot(pca_result)
pca_data <- as.data.frame(pca_result$x)
# Create a scatter plot of the first two principal components
library(ggplot2)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()+
stat_ellipse()
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()+
stat_ellipse()
biplot(pca_result)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()+
stat_ellipse()
pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_result$rotation
scree_values <- pca_result$sdev^2
plot(scree_values, type = "b", xlab = "Principal Component", ylab = "Eigenvalue"
scree_values <- pca_result$sdev^2
scree_values <- pca_result$sdev^2
plot(scree_values, type = "b", xlab = "Principal Component", ylab = "Eigenvalue", main = "Scree Plot")
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + conditioning, data = D_growth)
summary(model)
D_growth$date_factor <- as.factor(D_growth$date)
model2 <- lm(length.mm ~ width.mm + height.mm + date_factor+conditioning, data = D_growth)
summary(model2)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
```{r}
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
hist(B_growth$length.mm)
hist(B_growth$height.mm)
hist(B_growth$height.mm)
hist(B_growth$width.mm)
hist(D_growth$length.mm)
hist(D_growth$height.mm)
hist(D_growth$width.mm)
B_growth$lengthsqrt <- sqrt(B_growth$length.mm)
hist(B_growth$lengthsqrt)
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
### B
```{r}
hist(B_growth$length.mm)
B_growth$log_length <- log(B_growth$length.mm)
hist(B_growth$log_length)
B_growth$log_height <- log(B_growth$height.mm)
hist(B_growth$log_height)
hist(B_growth$width.mm)
B_growth$log_width <- log(B_growth$width.mm)
hist(B_growth$log_width)
D_growth$log_length <- log(D_growth$length.mm)
hist(D_growth$log_length)
hist(D_growth$length.mm)
hist(B_growth$width.mm)
hist(B_growth$height.mm)
hist(B_growth$length.mm)
growth <- rbind(B_growth, D_growth)
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
growth <- rbind(B_growth, D_growth)
View(growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
library(readxl)
library(tidyverse)
library(ggplot2)
library(gridExtra)
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
hist(B_growth$length.mm)
B_growth$log_length <- log(B_growth$length.mm)
hist(B_growth$log_length)
hist(B_growth$length.mm)
hist(B_growth$height.mm)
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
growth <- rbind(B_growth,D_growth)
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
growth <- rbind(B_growth,D_growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
D_growth_PCA <- subset(D_growth, select = c(length.mm, width.mm, height.mm))
pca_result <- prcomp(D_growth_PCA, scale. = TRUE)
biplot(pca_result)
pca_data <- as.data.frame(pca_result$x)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()
ggplot(B_growth, aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_minimal()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
ggplot(B_growth, aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
ggplot(B_growth, aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_height <- log(B_growth$height.mm)
# hist(B_growth$log_height)
B_growth %>%
filter(date = "2024-09-13")
B_growth %>%
filter(date = "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth %>%
filter(date == "2024-09-13")
B_growth %>%
filter(date == "2024-09-13")
B_growth$date[609]
B_growth %>%
filter(date == "2024-09-13 UTC") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth %>%
filter(date == "2024-09-13 UTC")
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
B_growth
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth$date <- as.Date(B_growth$date)
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_height <- log(B_growth$height.mm)
# hist(B_growth$log_height)
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_width <- log(B_growth$width.mm)
# hist(B_growth$log_width)
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
D_growth$date <- as.Date(D_growth$date)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# D_growth$log_length <- log(D_growth$length.mm)
# hist(_growth$log_length)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Width (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Width (mm)", y = "Count") +
theme_classic()
# B_growth$log_width <- log(B_growth$width.mm)
# hist(B_growth$log_width)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# D_growth$log_length <- log(D_growth$length.mm)
# hist(_growth$log_length)
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(xlab = "Length", ylab = "Height")
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(element_text(size = 20))
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Height", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
# Removing an outlier, I think it was an incorrect measurement
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Width", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
growth <- rbind(B_growth,D_growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
D_growth_PCA <- subset(D_growth, select = c(length.mm, width.mm, height.mm))
pca_result <- prcomp(D_growth_PCA, scale. = TRUE)
biplot(pca_result)
scree_values <- pca_result$sdev^2
plot(scree_values, type = "b", xlab = "Principal Component", ylab = "Eigenvalue", main = "Scree Plot")
pca_result$sdev^2 / sum(pca_result$sdev^2)
library(lmer)
library(nlme)
growth_noNT <- growth[growth$tag_num != "NT", ]
growth_noNT$date_numeric <-  as.numeric(as.Date(growth_noNT$date))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning + date_numeric, ,
random = ~ 1 | individual,
data = growth_noNT)
View(growth)
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning/bag_num + date_numeric,
random = ~ 1 | tag_num,
data = growth_noNT)
cor(data.frame(growth_noNT$effort, growth_noNT$conditioning, growth_noNT$bag_num, growth_noNT$date_numeric))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort * conditioning * date_numeric,
random = ~ 1 | effort/conditioning/bag_num/tag_num,
data = growth_noNT)
growth_noNT$date_numeric <-  as.numeric(as.Date(growth_noNT$date))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort * conditioning * date_numeric,
random = ~ 1 | effort/conditioning/bag_num/tag_num,
data = growth_noNT)
