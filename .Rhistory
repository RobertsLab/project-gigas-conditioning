<<<<<<< HEAD
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
```{r}
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
hist(B_growth$length.mm)
hist(B_growth$height.mm)
hist(B_growth$height.mm)
hist(B_growth$width.mm)
hist(D_growth$length.mm)
hist(D_growth$height.mm)
hist(D_growth$width.mm)
B_growth$lengthsqrt <- sqrt(B_growth$length.mm)
hist(B_growth$lengthsqrt)
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
### B
```{r}
hist(B_growth$length.mm)
B_growth$log_length <- log(B_growth$length.mm)
hist(B_growth$log_length)
B_growth$log_height <- log(B_growth$height.mm)
hist(B_growth$log_height)
hist(B_growth$width.mm)
B_growth$log_width <- log(B_growth$width.mm)
hist(B_growth$log_width)
D_growth$log_length <- log(D_growth$length.mm)
hist(D_growth$log_length)
hist(D_growth$length.mm)
hist(B_growth$width.mm)
hist(B_growth$height.mm)
hist(B_growth$length.mm)
growth <- rbind(B_growth, D_growth)
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
growth <- rbind(B_growth, D_growth)
View(growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
library(readxl)
library(tidyverse)
library(ggplot2)
library(gridExtra)
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
# D survival
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
hist(B_growth$length.mm)
B_growth$log_length <- log(B_growth$length.mm)
hist(B_growth$log_length)
hist(B_growth$length.mm)
hist(B_growth$height.mm)
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()
growth <- rbind(B_growth,D_growth)
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
growth <- rbind(B_growth,D_growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
D_growth_PCA <- subset(D_growth, select = c(length.mm, width.mm, height.mm))
pca_result <- prcomp(D_growth_PCA, scale. = TRUE)
biplot(pca_result)
pca_data <- as.data.frame(pca_result$x)
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA: Length, Width, and Height", x = "PC1", y = "PC2") +
theme_minimal()
ggplot(B_growth, aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_minimal()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
ggplot(B_growth, aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
ggplot(B_growth, aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_height <- log(B_growth$height.mm)
# hist(B_growth$log_height)
B_growth %>%
filter(date = "2024-09-13")
B_growth %>%
filter(date = "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth %>%
filter(date == "2024-09-13")
B_growth %>%
filter(date == "2024-09-13")
B_growth$date[609]
B_growth %>%
filter(date == "2024-09-13 UTC") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth %>%
filter(date == "2024-09-13 UTC")
# B survival
B_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/B_2023POGS_small_seed_daily/B_sizes_09132024.xlsx")
# Heights from bag 2 for 07/05/2024 showing up as NA's for some reason when data imported
B_growth$length.mm <- as.numeric(B_growth$length.mm)
B_growth$width.mm <- as.numeric(B_growth$width.mm)
B_growth$height.mm <- as.numeric(B_growth$height.mm)
B_growth <- B_growth %>% drop_na(length.mm, width.mm, height.mm)
B_growth
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# B_growth$log_length <- log(B_growth$length.mm)
# hist(B_growth$log_length)
B_growth$date <- as.Date(B_growth$date)
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_height <- log(B_growth$height.mm)
# hist(B_growth$log_height)
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
# B_growth$log_width <- log(B_growth$width.mm)
# hist(B_growth$log_width)
D_growth <- read_xlsx("/Users/graceleuchtenberger/Library/Mobile Documents/com~apple~CloudDocs/Documents/project-gigas-conditioning-GL/data/sizes/D_2023POGS_small_seed_weekly/D_sizes_09132024.xlsx")
D_growth <- D_growth %>% drop_na(length.mm, width.mm, height.mm)
D_growth$date <- as.Date(D_growth$date)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# D_growth$log_length <- log(D_growth$length.mm)
# hist(_growth$log_length)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = height.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Height (mm)", y = "Count") +
theme_classic()
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Width (mm)", y = "Count") +
theme_classic()
B_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = width.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Width (mm)", y = "Count") +
theme_classic()
# B_growth$log_width <- log(B_growth$width.mm)
# hist(B_growth$log_width)
D_growth %>%
filter(date == "2024-09-13") %>%
ggplot(aes(x = length.mm)) +
geom_histogram(fill = "blue", color = "black") +
labs(x = "Length (mm)", y = "Count") +
theme_classic()
# D_growth$log_length <- log(D_growth$length.mm)
# hist(_growth$log_length)
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(xlab = "Length", ylab = "Height")
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(element_text(size = 20))
ggplot(B_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(B_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(B_growth, aes(x=height.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Height", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(D_growth, aes(x=length.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
# Removing an outlier, I think it was an incorrect measurement
D_growth <- D_growth[D_growth$width.mm != 82, ]
ggplot(D_growth, aes(x=length.mm, y= width.mm))+
geom_point()+
theme_classic()+
labs(x = "Length", y = "Width")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
ggplot(D_growth, aes(x=width.mm, y= height.mm))+
geom_point()+
theme_classic()+
labs(x = "Width", y = "Height")+
theme(axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text = element_text(size = 20))
growth <- rbind(B_growth,D_growth)
growth$date_numeric <-  as.numeric(as.Date(growth$date))
# Linear model with date as a continuous variable
model <- lm(length.mm ~ width.mm + height.mm + date_numeric + effort/conditioning, data = growth)
summary(model)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
plot(model, which = 3)
plot(model$fitted.values, model$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Residuals vs Fitted")
abline(h = 0, col = "red")
qqnorm(model$residuals)
qqline(model$residuals, col = "red")
D_growth_PCA <- subset(D_growth, select = c(length.mm, width.mm, height.mm))
pca_result <- prcomp(D_growth_PCA, scale. = TRUE)
biplot(pca_result)
scree_values <- pca_result$sdev^2
plot(scree_values, type = "b", xlab = "Principal Component", ylab = "Eigenvalue", main = "Scree Plot")
pca_result$sdev^2 / sum(pca_result$sdev^2)
library(lmer)
library(nlme)
growth_noNT <- growth[growth$tag_num != "NT", ]
growth_noNT$date_numeric <-  as.numeric(as.Date(growth_noNT$date))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning + date_numeric, ,
random = ~ 1 | individual,
data = growth_noNT)
View(growth)
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning/bag_num + date_numeric,
random = ~ 1 | tag_num,
data = growth_noNT)
cor(data.frame(growth_noNT$effort, growth_noNT$conditioning, growth_noNT$bag_num, growth_noNT$date_numeric))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort * conditioning * date_numeric,
random = ~ 1 | effort/conditioning/bag_num/tag_num,
data = growth_noNT)
growth_noNT$date_numeric <-  as.numeric(as.Date(growth_noNT$date))
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort * conditioning * date_numeric,
random = ~ 1 | effort/conditioning/bag_num/tag_num,
data = growth_noNT)
library(lmer)
library(lme4)
library(car)
install.packages("car")
install.packages("lme4")
library(lme4)
library(car)
vif(lm(length.mm ~ effort * conditioning * date_numeric, data = growth_noNT))
vif(lm(length.mm ~ effort/conditioning + date_numeric, data = growth_noNT))
# lme model with nested random effects structure
model <- lme(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning + date_numeric,
random = ~ 1 | bag_num/tag_num,
data = growth_noNT)
# lme model with nested random effects structure
model <- lmer(cbind(length.mm, width.mm, height.mm) ~ effort/conditioning + date_numeric,
random = ~ 1 | bag_num/tag_num,
data = growth_noNT)
# lme model with nested random effects structure
model <- lmer(length.mm ~ width.mm + height.mm + effort/conditioning + date_numeric + (1 | bag_num/tag_num), data = growth_noNT)
summary(model)
tidbit.files <- list.files(path="data/environmental/loggers/point_whitney/for-analysis", pattern="*.csv", full.names=TRUE)
#will need to change to HST time
tidbits <- setNames(tidbit.files, tidbit.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temp   (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
levels(as.factor(tidbits$logger))
tidbits <- tidbits %>%
mutate(group = case_when(
logger == "22023395" ~ "trays",
logger == "22023398" ~ "outdoor",
logger == "22023406" ~ "broodstock",
logger == "22023410" ~ "LCO",
TRUE ~ "other"  # Default for other values
))
temp_plot<-tidbits%>%
ggplot(aes(x=DateTime, y=temp.C, colour=group, fill=group))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(8,32)+
theme_classic(); temp_plot
library(tidyverse)
library(stringr)
library(readxl)
library(purrr)
library(lubridate)
library(ggplot2)
library(seacarb)
tidbit.files <- list.files(path="data/environmental/loggers/point_whitney/for-analysis", pattern="*.csv", full.names=TRUE)
#will need to change to HST time
tidbits <- setNames(tidbit.files, tidbit.files) %>%
map_dfr(read_csv, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temp   (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
#format date for trays logger, formatted differently
trays<-tidbits%>%
filter(logger=="22023395")
other<-tidbits%>%
filter(!logger=="22023395")
trays$DateTime<-as.POSIXct(trays$DateTime, format="%m/%d/%y %H:%M")
other$DateTime<-as.POSIXct(other$DateTime, format="%m/%d/%Y %H:%M:%S")
tidbits<-rbind(trays,other)
levels(as.factor(tidbits$logger))
tidbits <- tidbits %>%
mutate(group = case_when(
logger == "22023395" ~ "trays",
logger == "22023398" ~ "outdoor",
logger == "22023406" ~ "broodstock",
logger == "22023410" ~ "LCO",
TRUE ~ "other"  # Default for other values
))
levels(as.factor(tidbits$group))
temp_plot<-tidbits%>%
ggplot(aes(x=DateTime, y=temp.C, colour=group, fill=group))+
geom_point(alpha=0.7)+
ylab("Temperature (°C)")+
xlab("Date Time")+
ylim(8,32)+
theme_classic(); temp_plot
ggsave(temp_plot, filename="figures/environmental/point-whitney-loggers.png", width=6, height=4)
westcott.files <- list.files(path="data/environmental/loggers/westcottloggers_20240913/", pattern="*.xlsx", full.names=TRUE)
#will need to change to HST time
westcott <- setNames(westcott.files, westcott.files) %>%
map_dfr(read_xlsx, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temperature (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
westcott$DateTime<-as.POSIXct(westcott$DateTime, format="%m/%d/%Y %H:%M:%S")
westcott.files <- list.files(path="data/environmental/loggers/westcottloggers_20240913/", pattern="*.xlsx", full.names=TRUE)
#will need to change to HST time
westcott <- setNames(westcott.files, westcott.files) %>%
map_dfr(read_xlsx, .id = "logger") %>%
rename(DateTime=`Date-Time (PDT)`, temp.C=`Temperature (°C)`)%>%
select(!`#`)%>%
select(logger, DateTime, temp.C)%>%
mutate(logger=sub(".*/", "", logger))%>% #remove the path name
mutate(logger=sub("_.*", "", logger))%>% #keep only the serial number
filter(!temp.C=="NA")
westcott$DateTime<-as.POSIXct(westcott$DateTime, format="%m/%d/%Y %H:%M:%S")
levels(as.factor(westcott$logger))
westcott <- westcott %>%
mutate(group = c("Westcott"))
levels(as.factor(westcott$group))
View(westcott)
=======
control_e<-effort_e%>%filter(temperature=="18C")
stress_e<-effort_e%>%filter(temperature=="46C")
# Chunk 7
s1 <- survfit(Surv(time, status) ~ treatment, data = control_d)
str(s1)
# Chunk 8
survfit2(Surv(time, status) ~ treatment+temperature, data = control_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 9
summary(survfit(Surv(time, status) ~ treatment, data = control_d), times = 24)
# Chunk 10
survdiff(Surv(time, status) ~ treatment, data = control_d)
# Chunk 11
coxph(Surv(time, status) ~ treatment, data = control_d)
coxph(Surv(time, status) ~ treatment, data = control_d) %>%
tbl_regression(exp = TRUE)
# Chunk 12
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_d)
str(s2)
# Chunk 13
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 14
summary(survfit(Surv(time, status) ~ treatment, data = stress_d), times = 24)
# Chunk 15
survdiff(Surv(time, status) ~ treatment, data = stress_d)
# Chunk 16
coxph(Surv(time, status) ~ treatment, data = stress_d)
coxph(Surv(time, status) ~ treatment, data = stress_d) %>%
tbl_regression(exp = TRUE)
# Chunk 17
my_theme<-theme_classic()
# Chunk 18
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort D (Weekly Temp) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 19
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort D (Weekly Temp) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 20
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortD.png", width=10, height=4)
# Chunk 21
s1 <- survfit(Surv(time, status) ~ treatment, data = control_b)
str(s1)
# Chunk 22
survfit2(Surv(time, status) ~ treatment+temperature, data = control_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 23
summary(survfit(Surv(time, status) ~ treatment, data = control_b), times = 24)
# Chunk 24
survdiff(Surv(time, status) ~ treatment, data = control_b)
# Chunk 25
coxph(Surv(time, status) ~ treatment, data = control_b)
coxph(Surv(time, status) ~ treatment, data = control_b) %>%
tbl_regression(exp = TRUE)
# Chunk 26
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_b)
str(s2)
# Chunk 27
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 28
summary(survfit(Surv(time, status) ~ treatment, data = stress_b), times = 24)
# Chunk 29
survdiff(Surv(time, status) ~ treatment, data = stress_b)
# Chunk 30
coxph(Surv(time, status) ~ treatment, data = stress_b)
coxph(Surv(time, status) ~ treatment, data = stress_b) %>%
tbl_regression(exp = TRUE)
# Chunk 31
my_theme<-theme_classic()
# Chunk 32
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort B (Daily Temp) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 33
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort B (Daily Temp) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 34
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortB.png", width=10, height=4)
# Chunk 35
s1 <- survfit(Surv(time, status) ~ treatment, data = control_e)
str(s1)
# Chunk 36
survfit2(Surv(time, status) ~ treatment+temperature, data = control_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 37
summary(survfit(Surv(time, status) ~ treatment, data = control_e), times = 24)
# Chunk 38
survdiff(Surv(time, status) ~ treatment, data = control_e)
# Chunk 39
coxph(Surv(time, status) ~ treatment, data = control_e)
coxph(Surv(time, status) ~ treatment, data = control_e) %>%
tbl_regression(exp = TRUE)
# Chunk 40
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_e)
str(s2)
# Chunk 41
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 42
summary(survfit(Surv(time, status) ~ treatment, data = stress_e), times = 24)
# Chunk 43
survdiff(Surv(time, status) ~ treatment, data = stress_e)
# Chunk 44
coxph(Surv(time, status) ~ treatment, data = stress_e)
coxph(Surv(time, status) ~ treatment, data = stress_e) %>%
tbl_regression(exp = TRUE)
# Chunk 45
my_theme<-theme_classic()
# Chunk 46
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort E (Weekly Temp or Fresh) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 47
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort E (Weekly Temp or Fresh) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p=0.001")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 48
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortE.png", width=10, height=4)
# Chunk 1
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Chunk 2
library(tidyverse)
library(ggplot2)
library(survival)
library(readxl)
library(ggsurvfit)
library(gtsummary)
library(cardx)
library(cowplot)
# Chunk 3
data<-read_excel("data/survival/lab_survival/lab_survival.xlsx")
# Chunk 4
data<-data%>%
pivot_longer(names_to="time", values_to="status", cols=`0`:`24`)%>%
mutate(time=as.numeric(time))
# Chunk 5
effort_d<-data%>%filter(effort=="Effort D")
effort_b<-data%>%filter(effort=="Effort B")
effort_e<-data%>%filter(effort=="Effort E")
# Chunk 6
control_d<-effort_d%>%filter(temperature=="18C")
stress_d<-effort_d%>%filter(temperature=="46C")
control_b<-effort_b%>%filter(temperature=="18C")
stress_b<-effort_b%>%filter(temperature=="46C")
control_e<-effort_e%>%filter(temperature=="18C")
stress_e<-effort_e%>%filter(temperature=="46C")
# Chunk 7
s1 <- survfit(Surv(time, status) ~ treatment, data = control_d)
str(s1)
# Chunk 8
survfit2(Surv(time, status) ~ treatment+temperature, data = control_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 9
summary(survfit(Surv(time, status) ~ treatment, data = control_d), times = 24)
# Chunk 10
survdiff(Surv(time, status) ~ treatment, data = control_d)
# Chunk 11
coxph(Surv(time, status) ~ treatment, data = control_d)
coxph(Surv(time, status) ~ treatment, data = control_d) %>%
tbl_regression(exp = TRUE)
# Chunk 12
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_d)
str(s2)
# Chunk 13
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 14
summary(survfit(Surv(time, status) ~ treatment, data = stress_d), times = 24)
# Chunk 15
survdiff(Surv(time, status) ~ treatment, data = stress_d)
# Chunk 16
coxph(Surv(time, status) ~ treatment, data = stress_d)
coxph(Surv(time, status) ~ treatment, data = stress_d) %>%
tbl_regression(exp = TRUE)
# Chunk 17
my_theme<-theme_classic()
# Chunk 18
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort D (Weekly Temp) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 19
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_d) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort D (Weekly Temp) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 20
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortD.png", width=10, height=4)
# Chunk 21
s1 <- survfit(Surv(time, status) ~ treatment, data = control_b)
str(s1)
# Chunk 22
survfit2(Surv(time, status) ~ treatment+temperature, data = control_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 23
summary(survfit(Surv(time, status) ~ treatment, data = control_b), times = 24)
# Chunk 24
survdiff(Surv(time, status) ~ treatment, data = control_b)
# Chunk 25
coxph(Surv(time, status) ~ treatment, data = control_b)
coxph(Surv(time, status) ~ treatment, data = control_b) %>%
tbl_regression(exp = TRUE)
# Chunk 26
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_b)
str(s2)
# Chunk 27
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 28
summary(survfit(Surv(time, status) ~ treatment, data = stress_b), times = 24)
# Chunk 29
survdiff(Surv(time, status) ~ treatment, data = stress_b)
# Chunk 30
coxph(Surv(time, status) ~ treatment, data = stress_b)
coxph(Surv(time, status) ~ treatment, data = stress_b) %>%
tbl_regression(exp = TRUE)
# Chunk 31
my_theme<-theme_classic()
# Chunk 32
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort B (Daily Temp) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 33
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_b) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort B (Daily Temp) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 34
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortB.png", width=10, height=4)
# Chunk 35
s1 <- survfit(Surv(time, status) ~ treatment, data = control_e)
str(s1)
# Chunk 36
survfit2(Surv(time, status) ~ treatment+temperature, data = control_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 37
summary(survfit(Surv(time, status) ~ treatment, data = control_e), times = 24)
# Chunk 38
survdiff(Surv(time, status) ~ treatment, data = control_e)
# Chunk 39
coxph(Surv(time, status) ~ treatment, data = control_e)
coxph(Surv(time, status) ~ treatment, data = control_e) %>%
tbl_regression(exp = TRUE)
# Chunk 40
s2 <- survfit(Surv(time, status) ~ treatment, data = stress_e)
str(s2)
# Chunk 41
survfit2(Surv(time, status) ~ treatment+temperature, data = stress_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
# Chunk 42
summary(survfit(Surv(time, status) ~ treatment, data = stress_e), times = 24)
# Chunk 43
survdiff(Surv(time, status) ~ treatment, data = stress_e)
# Chunk 44
coxph(Surv(time, status) ~ treatment, data = stress_e)
coxph(Surv(time, status) ~ treatment, data = stress_e) %>%
tbl_regression(exp = TRUE)
# Chunk 45
my_theme<-theme_classic()
# Chunk 46
plot1<-survfit2(Surv(time, status) ~ treatment, data = control_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="Effort E (Weekly Temp or Fresh) 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
# Chunk 47
plot2<-survfit2(Surv(time, status) ~ treatment, data = stress_e) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "Effort E (Weekly Temp or Fresh) 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p=0.001")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
# Chunk 48
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortE.png", width=10, height=4)
control<-effort%>%filter(temperature=="18C")
control<-data%>%filter(temperature=="18C")
stress<-data%>%filter(temperature=="46C")
control$code<-paste(control$effort, control$treatment)
stress$code<-paste(stress$effort, stress$treatment)
View(stress)
s1 <- survfit(Surv(time, status) ~ treatment, data = control)
str(s1)
survfit2(Surv(time, status) ~ code+temperature, data = control) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
summary(survfit(Surv(time, status) ~ code, data = control), times = 24)
survdiff(Surv(time, status) ~ code, data = control)
coxph(Surv(time, status) ~ code, data = control)
coxph(Surv(time, status) ~ code, data = control) %>%
tbl_regression(exp = TRUE)
s2 <- survfit(Surv(time, status) ~ code, data = stress)
survfit2(Surv(time, status) ~ code+temperature, data = stress) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability"
)
summary(survfit(Surv(time, status) ~ code, data = stress), times = 24)
survdiff(Surv(time, status) ~ code, data = stress)
coxph(Surv(time, status) ~ code, data = stress)
coxph(Surv(time, status) ~ code, data = stress) %>%
tbl_regression(exp = TRUE)
my_theme<-theme_classic()
plot1<-survfit2(Surv(time, status) ~ code, data = control) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title="All Efforts 18°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p>0.05")+
#geom_text(x=10, y=0.2, label="Cox PH p=0.8")+
theme(legend.position="none")
plot2<-survfit2(Surv(time, status) ~ code, data = stress) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "All Efforts 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.2, label="Cox PH p<0.001")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
plot2
plot2<-survfit2(Surv(time, status) ~ code, data = stress) %>%
ggsurvfit() +
labs(
x = "Hours",
y = "Survival probability",
title = "All Efforts 46°C"
)+
ylim(0,1)+
my_theme+
geom_text(x=10, y=0.1, label="Cox PH p<0.001")+
#geom_text(x=10, y=0.15, label="Temperature vs control p=0.002")+
#geom_text(x=10, y=0.10, label="All others vs control p>0.05")+
theme(legend.position="right")
plot2
plots<-plot_grid(plot1, plot2, rel_widths=c(0.65,1), ncol=2)
ggsave(plots, filename="figures/survival/KMcurves_EffortsALL.png", width=10, height=4)
>>>>>>> de9c5246009d8c5077715120e9fece8bf6fa564c
